df_2 <- data.frame(
value = c(58,42,40,26,12,8,7,6,6,6,4,4,2),
name = c("protease","nuclease","DnaK chaperone","helicase","polymerase","PIN domain","others","terminase","DNA repair","virulence","primase","ligase","kinase")
)
df_2
# Barplot
bp2 <- ggplot(df_2, aes(reorder(name,value), value)) +
geom_bar(stat = "identity") +
geom_col() +
coord_flip() +
labs(x="Protein", y="") +
theme_classic()+
theme_grey(base_size = 17)
bp2
pdf("~/Box/Final_Manuscript/2020_ATPase/PPV_ATPase_barchart.pdf",width=10)
dev.off()
#
df_2 <- data.frame(
value = c(58,42,40,26,12,8,7,6,6,6,4,4,2),
name = c("protease","nuclease","DnaK chaperone","helicase","polymerase","PIN domain","others","terminase","DNA repair","virulence","primase","ligase","kinase")
)
df_2
# Barplot
bp2 <- ggplot(df_2, aes(reorder(name,value), value)) +
geom_bar(stat = "identity") +
geom_col() +
coord_flip() +
labs(x="Protein", y="") +
theme_classic()+
theme_grey(base_size = 17)
bp2
pdf("~/Box/Final_Manuscript/2020_ATPase/Figures/PPV_ATPase_barchart.pdf",width=10)
source('~/Box/Final_Manuscript/2020_ATPase/Figures/Chart_Interpro.R')
dev.off()
pdf("~/Box/Final_Manuscript/2020_ATPase/Figures/PPV_ATPase_barchart.pdf",width=10)
pdf("~/Box/Final_Manuscript/2020_ATPase/Figures/PPV_ATPase_barchart.pdf",width=10)
dev.off()
#
df_2 <- data.frame(
value = c(58,42,40,26,12,8,7,6,6,6,4,4,2),
name = c("protease","nuclease","DnaK chaperone","helicase","polymerase","PIN domain","others","terminase","DNA repair","virulence","primase","ligase","kinase")
)
df_2
pdf("~/Box/Final_Manuscript/2020_ATPase/Figures/PPV_ATPase_barchart.pdf",width=10)
# Barplot
bp2 <- ggplot(df_2, aes(reorder(name,value), value)) +
geom_bar(stat = "identity") +
geom_col() +
coord_flip() +
labs(x="Protein", y="") +
theme_classic()+
theme_grey(base_size = 17)
bp2
dev.off()
# Fitting Labels
library(ggplot2)
library(gggenes)
library(ggplot2)
library(gggenes)
m = c("spain_SRR5579984__NODE_2_length_158067_cov_33.568511_94",
"pig_EL5598_F7_scaffold_2782_4")
g = c("protein -3","protein -2","protein -1","Protease ATPase","protein +1","protein +2","protein +3",
"protein -3","protein -2","protein -1","Protease ATPase","protein +1","protein +2","protein +3")
s = c(61431,62051,62363,62936,64299,64706,64941,
228,846,1152,1726,3089,3493,3728)
e = c(61979,62248,62863,64177,64676,64930,65099,
776,1043,1652,2967,3463,3717,3886)
st = c("forward","reverse","forward","forward","forward","forward","forward",
"forward","reverse","forward","forward","forward","forward","forward")
d = c(1,-1,1,1,1,1,1,
1,-1,1,1,1,1,1)
crispr_genes <- data.frame("genome"=m, "gene"=g, "start"=s, "end"=e, "strand"=st, "direction"=d)
crispr_genes$direction <- ifelse(crispr_genes$strand == "forward", 1, -1)
# ggplot(crispr_genes, aes(xmin = start, xmax = end, y = genome, fill = gene, forward = direction)) +
#   geom_gene_arrow() +
#   facet_wrap(~ genome, scales = "free", ncol = 1) +
#   scale_fill_brewer(palette = "Set3")
ggplot(crispr_genes, aes(xmin = start, xmax = end, y = genome, forward = direction)) +
geom_gene_arrow() +
geom_blank(data = crispr_genes) +
facet_wrap(~ genome, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
ggplot(crispr_genes, aes(xmin = start, xmax = end, y = genome, forward = direction)) +
geom_gene_arrow() +
geom_blank(data = crispr_genes) +
facet_wrap(~ genome, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
library(ggplot2)
library(gggenes)
m = c("spain_SRR5579984__NODE_2_length_158067_cov_33.568511_94",
"pig_EL5598_F7_scaffold_2782_4")
g = c("protein -3","protein -2","protein -1","Protease ATPase","protein +1","protein +2","protein +3",
"protein -3","protein -2","protein -1","Protease ATPase","protein +1","protein +2","protein +3")
s = c(61431,62051,62363,62936,64299,64706,64941,
228,846,1152,1726,3089,3493,3728)
e = c(61979,62248,62863,64177,64676,64930,65099,
776,1043,1652,2967,3463,3717,3886)
st = c("forward","reverse","forward","forward","forward","forward","forward",
"forward","reverse","forward","forward","forward","forward","forward")
d = c(1,-1,1,1,1,1,1,
1,-1,1,1,1,1,1)
crispr_genes <- data.frame("genome"=m, "gene"=g, "start"=s, "end"=e, "strand"=st, "direction"=d)
crispr_genes$direction <- ifelse(crispr_genes$strand == "forward", 1, -1)
ggplot(crispr_genes, aes(xmin = start, xmax = end, y = genome, forward = direction)) +
geom_gene_arrow() +
geom_blank(data = crispr_genes) +
facet_wrap(~ genome, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
m = c("Genome1","Genome1","Genome1","Genome1","Genome1","Genome1","Genome1",
"Genome2","Genome2","Genome2","Genome2","Genome2","Genome2","Genome2",
"Genome3","Genome3","Genome3","Genome3","Genome3","Genome3","Genome3",
"Genome4","Genome4","Genome4","Genome4","Genome4","Genome4","Genome4",
"Genome5","Genome5","Genome5","Genome5","Genome5","Genome5","Genome5",
"Genome6","Genome6","Genome6","Genome6","Genome6","Genome6","Genome6",
"Genome7","Genome7","Genome7","Genome7","Genome7","Genome7","Genome7",
"Genome8","Genome8","Genome8","Genome8","Genome8","Genome8","Genome8")
g = c("protein -3","protein -2","protein -1","PIN domain ATPase","protein +1","protein +2","protein +3",
"protein -3","protein -2","protein -1","PIN domain ATPase","protein +1","protein +2","protein +3",
"protein -3","protein -2","protein -1","PIN domain ATPase","protein +1","protein +2","protein +3",
"protein -3","protein -2","protein -1","PIN domain ATPase","protein +1","protein +2","protein +3",
"protein -3","protein -2","protein -1","PIN domain ATPase","protein +1","protein +2","protein +3",
"protein -3","protein -2","protein -1","PIN domain ATPase","protein +1","protein +2","protein +3",
"protein -3","protein -2","protein -1","PIN domain ATPase","protein +1","protein +2","protein +3",
"protein -3","protein -2","protein -1","PIN domain ATPase","protein +1","protein +2","protein +3")
s = c((47777-47777)/3,(48316-47777)/3,(49402-47777)/3,(49936-47777)/3,(51263-47777)/3,(51921-47777)/3,(52095-47777)/3,
(9556-2724)/3,(9556-3531)/3,(9556-3779)/3,(9556-4209)/3,(9556-5482)/3,(9556-6156)/3,(9556-6950)/3,
(10200-10200)/3,(11218-10200)/3,(14107-10200)/3,(14404-10200)/3,(15961-10200)/3,(16414-10200)/3,(16988-10200)/3,
(88283-88283)/3,(88930-88283)/3,(89241-88283)/3,(89842-88283)/3,(91332-88283)/3,(92458-88283)/3,(93477-88283)/3,
(209695-202129)/3,(209695-204558)/3,(209695-205522)/3,(209695-206706)/3,(209695-208423)/3,(209695-208824)/3,(209695-209099)/3,
(51077-51077)/3,(51919-51077)/3,(52328-51077)/3,(52717-51077)/3,(54056-51077)/3,(54510-51077)/3,(55081-51077)/3,
(145715-145715)/3,(146092-145715)/3,(146575-145715)/3,(147291-145715)/3,(149700-145715)/3,(151178-145715)/3,(152412-145715)/3,
(23558-23558)/3,(24362-23558)/3,(25311-23558)/3,(26628-23558)/3,(29389-23558)/3,(29779-23558)/3,(30280-23558)/3)
e = c((48130-47777)/3,(49353-47777)/3,(49758-47777)/3,(51282-47777)/3,(51877-47777)/3,(52079-47777)/3,(52358-47777)/3,
(9556-3518)/3,(9556-3770)/3,(9556-4222)/3,(9556-5480)/3,(9556-6147)/3,(9556-6938)/3,(9556-9556)/3,
(11201-10200)/3,(13845-10200)/3,(14364-10200)/3,(15696-10200)/3,(16230-10200)/3,(16614-10200)/3,(17671-10200)/3,
(88879-88283)/3,(89154-88283)/3,(89555-88283)/3,(91272-88283)/3,(92456-88283)/3,(93420-88283)/3,(95849-88283)/3,
(209695-204555)/3,(209695-205520)/3,(209695-206646)/3,(209695-208136)/3,(209695-208737)/3,(209695-209048)/3,(209695-209695)/3,
(51919-51077)/3,(52326-51077)/3,(52618-51077)/3,(54030-51077)/3,(54427-51077)/3,(54797-51077)/3,(55329-51077)/3,
(146083-145715)/3,(146550-145715)/3,(147219-145715)/3,(149627-145715)/3,(150920-145715)/3,(152401-145715)/3,(153611-145715)/3,
(24265-23558)/3,(25324-23558)/3,(26585-23558)/3,(29279-23558)/3,(29682-23558)/3,(30231-23558)/3,(31659-23558)/3)
st = c("forward","forward","forward","forward","forward","forward","forward",
"reverse","reverse","reverse","reverse","reverse","reverse","reverse",
"forward","forward","forward","forward","forward","forward","forward",
"forward","forward","forward","forward","forward","forward","forward",
"reverse","reverse","reverse","reverse","reverse","reverse","reverse",
"reverse","reverse","reverse","reverse","reverse","forward","forward",
"forward","forward","reverse","forward","forward","forward","forward",
"reverse","forward","reverse","reverse","reverse","reverse","forward")
d = c(1,1,1,1,1,1,1,
-1,-1,-1,-1,-1,-1,-1,
1,1,1,1,1,1,1,
1,1,1,1,1,1,1,
-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,1,1,
1,1,-1,1,1,1,1,
-1,1,-1,-1,-1,-1,1)
crispr_genes <- data.frame("genome"=m, "gene"=g, "start"=s, "end"=e, "strand"=st, "direction"=d)
crispr_genes$direction <- ifelse(crispr_genes$strand == "forward", 1, -1)
ggplot(crispr_genes, aes(xmin = start, xmax = end, y = genome, forward = direction)) +
geom_gene_arrow() +
geom_blank(data = crispr_genes) +
facet_wrap(~ genome, scales = "free", ncol = 1) +
scale_fill_brewer(palette = "Set3") +
theme_genes()
#maybe?
dummies <- make_alignment_dummies(
crispr_genes,
aes(xmin = start, xmax = end, y = genome, id = gene),
on = "DNA repair"
)
library(ggpattern)
install.packages(ggpattern)
install.packages(ggplot2)
library(ggplot2)
library(hrbrthemes)
library(ggplot2)
library(hrbrthemes)
source('~/Desktop/Pro_Trypanosome/Nanopore_trypanosome/R_scripts/Fig5.R')
setwd("~/Desktop/Pro_Trypanosome/Nanopore_trypanosome/R_scripts")
source('~/Desktop/Pro_Trypanosome/Nanopore_trypanosome/R_scripts/Fig5.R')
source('~/Desktop/Pro_Trypanosome/Nanopore_trypanosome/R_scripts/Fig5.R')
source('~/Desktop/Pro_Trypanosome/Nanopore_trypanosome/R_scripts/Fig5.R')
> sessionInfo()
sessionInfo()
dev.off()
print(plot(1))
dev.off()
print(plot(1))
dev.off()
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill="")) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
dev.off()
dev.off()
print(plot(1))
dev.off()
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill="")) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
ggplot(df, aes(x=name, y=val, fill="")) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill="")) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
dev.off()
print(plot(1))
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
dev.off()
print(plot(1))
dev.off()
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
name=rev("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=rev(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
name=c("TrypOnly:98.61%","TrypBlood_1:97.08%","TrypBlood_Control:0.03%","TrypBlood_2:26.81%","Feces_Control:0.01%","Feces_Infected:0.01%"),
val=c(25712007, 25314001, 6906, 6991790, 2443, 2085)
)
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
name=c("Feces_Control","Feces_Infected","TrypBlood_2","TrypBlood_Control","TrypBlood_1","TrypOnly"),
val=c(0.01, 0.01, 26.81, 0.03, 97.08, 98.61, )
)
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4, position_fill(reverse = TRUE)) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4, position = position_fill(reverse = TRUE)) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar( alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
name=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
val=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="count", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
ggplot(df, aes(x=name, y=val, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
Sample=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
Percentage=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=Sample, y=Percentage, fill=name)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
Sample=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
Percentage=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=Sample, y=Percentage, fill=Sample)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
Sample=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
Percentage=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x="", y="Percentage Coverage", fill=Sample)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
Sample=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
Percentage=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=Sample, y=Percentage, fill=Sample)) +
geom_bar(stat="count", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
Sample=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
Percentage=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=Sample, y=Percentage, fill=Sample)) +
geom_bar(alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame(
Sample=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
Percentage=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=Sample, y=Percentage)) +
geom_bar(alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
df = data.frame( ID=c(1:6)
Sample=c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected"),
Percentage=c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
)
ggplot(df, aes(x=Sample, y=Percentage, fill=Sample)) +
geom_bar(stat="identity", alpha=.6, width=.4) +
scale_fill_grey(start=0, end=0.8) +  # start and end define the range of grays
theme_bw()
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
#png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Employee Name",
ylab="Salary Range",col="black",
main="Salary chart",border="Red")
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
#png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Employee Name",
ylab="",col="black")
# Create the data for the chart
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
#png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Employee Name",
ylab="",col="black", ylim=c(0,100))
# Save the file
# Create the data for the chart
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
#png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Sample",
ylab="",col=c(grey30, grey40, grey50, grey60, grey70, grey80), ylim=c(0,100))
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Sample",
ylab="",col=c(grey28, grey40, grey50, grey60, grey70, grey80), ylim=c(0,100))
# Create the data for the chart
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
#png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Sample",
ylab="",col=gray.colors(6, start = 0.3, end = 0.9, gamma = 2.2, alpha, rev = FALSE), ylim=c(0,100))
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
#png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Sample",
ylab="",col=gray.colors(6, start=0, end=0.8), ylim=c(0,100))
# Create the data for the chart
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
#png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Sample",
ylab="",col=gray.colors(6, start=0, end=0.6), ylim=c(0,100))
# Save the file
# Create the data for the chart
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
#png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Sample",
ylab="",col=gray.colors(6, start=0, end=1), ylim=c(0,100))
# Save the file
dev.off()
# Create the data for the chart
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
#png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Sample",
ylab="",col=gray.colors(6, start=0, end=1), ylim=c(0,100))
# Create the data for the chart
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
#png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Sample",
ylab="",col=gray.colors(6, start=0, end=1, gamma = 2.2), ylim=c(0,100))
# Create the data for the chart
GFG_ID   <- c(1:5)
GFG_Sal  <- c(98.61, 97.08, 0.03, 26.81, 0.01, 0.01)
GFG_Name <- c("TrypOnly","TrypBlood_1","TrypBlood_Control","TrypBlood_2","Feces_Control","Feces_Infected")
X <- data.frame(GFG_ID,GFG_Name,GFG_Sal)
X
# Give the chart file a name
png(file = "Fig5.png")
# Plot the bar chart
barplot(GFG_Sal,names.arg=GFG_Name,xlab="Sample",
ylab="",col=gray.colors(6, start=0, end=0.9), ylim=c(0,100))
# Save the file
dev.off()
